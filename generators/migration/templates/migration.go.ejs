package migration

import (
	"github.com/go-gormigrate/gormigrate/v2"
	"gorm.io/gorm"
<%- include('import') -%>
)

func Create<%= pluralClassName %>Table() *gormigrate.Migration {
	return &gormigrate.Migration{
		ID: "<%= migrationID %>",
		Migrate: func(tx *gorm.DB) error {
			type <%= className %> struct {
				ID             string     `gorm:"type:uuid;primaryKey;autoIncrement:false;default:gen_random_uuid()"`
				<%- include('print-props') %>
				<% if (!isCustomChoice) { -%>
						CreatedAt time.Time `gorm:"type:timestamp with time zone;not null;default:now()"`
						UpdatedAt time.Time `gorm:"type:timestamp with time zone;not null;default:now()"`
					<% if (modelScheme.softDeletes) { -%>
						DeletedAt *gorm.DeletedAt `sql:"index" gorm:"type:timestamp with time zone;"`
					<% } -%>
				<% } -%>
			}
			if err := tx.Table("<%= tableName %>").AutoMigrate(&<%= className %>{}); err != nil {
				return err
			}

			return nil
		},

		Rollback: func(tx *gorm.DB) error {
			return tx.Migrator().DropTable("<%= tableName %>")
		},
	}
}
