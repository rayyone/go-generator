package middleware

import (
	"github.com/getsentry/sentry-go"
	"github.com/gin-gonic/gin"
	"github.com/rayyone/go-core/helpers/method"
	"github.com/rayyone/go-core/helpers/str"
)

// API middleware for API
func API() gin.HandlerFunc {
	return func(c *gin.Context) {
		sentry.ConfigureScope(func(scope *sentry.Scope) {
			scope.SetExtra("method", c.Request.Method)
			scope.SetExtra("url", c.Request.URL.String())
			scope.SetExtra("user_agent", c.Request.UserAgent())
			scope.SetExtra("content_type", c.ContentType())
			scope.SetExtra("query_params", c.Request.URL.Query())
			scope.SetTag("request_id", str.UUID())
			scope.SetExtra("json_response", nil)
			scope.SetUser(sentry.User{ID: ""})
			scope.SetExtra("body_params", nil)
		})

		bodyParams, _ := method.GetBodyParams(c)
		if bodyParams != nil {
			sentry.ConfigureScope(func(scope *sentry.Scope) {
				scope.SetExtra("body_params", bodyParams)
			})
		}

		c.Next()
	}
}
