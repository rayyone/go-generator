package migration

import (
	"github.com/go-gormigrate/gormigrate/v2"
	"gorm.io/gorm"
	"<%= appModName %>/app/model"
	"time"
)

func CreateAccessTokensTable() *gormigrate.Migration {
	return &gormigrate.Migration{
		ID: "202206071232_auth_create_access_token_table",
		Migrate: func(tx *gorm.DB) error {
			type AccessToken struct {
				ID             string     `gorm:"type:uuid;primaryKey;autoIncrement:false"`
				UserID         string     `gorm:"not null;type:uuid"`
				AccessToken    *string    `gorm:"null;type:text;uniqueIndex:idx_access_tokens_token"`
				TokenExpiredAt *time.Time `gorm:"null;type:timestamp with time zone"`
				Revoke         *bool      `gorm:"null;type:boolean;default:false"`

				model.Timestamps
			}

			if err := tx.AutoMigrate(&AccessToken{}); err != nil {
				return err
			}

			if err := tx.Exec(`ALTER TABLE access_tokens
				ADD CONSTRAINT fk_access_tokens_users FOREIGN KEY (user_id)
				REFERENCES users (id) ON UPDATE CASCADE ON DELETE CASCADE`).Error; err != nil {
				return err
			}

			return nil
		},

		Rollback: func(tx *gorm.DB) error {
			return tx.Migrator().DropTable("access_tokens")
		},
	}
}
