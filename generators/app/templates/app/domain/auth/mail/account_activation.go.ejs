package mail

import (
	"fmt"
	"<%= appModName %>/app/domain/auth/constant"
	"<%= appModName %>/config"
	"strings"
)

const (
	AccountActivationSubject  string = "Account Activation"
	AccountActivationHTMLBody string = `
	<div
        style="max-width: 600px; margin: 0 auto; font-family: Helvetica Neue,Arial,Helvetica,sans-serif; color: #414141; font-size: 16px;padding: 9px;">
        <div style="font-size: 28px; margin-bottom: 18px; color: #ff7119; word-break: break-word; line-height: 115%;">
            Please verify your email address
        </div>
        <div style="word-break: break-word;padding-bottom:9px;">
            You have created an account with this email address.
        </div>
        <div style="word-break: break-word;padding-bottom:9px;">
            Click on this button to verify your email address.
        </div>
        <div style="margin-top: 27px; margin-bottom: 36px; padding: 0; word-break: break-word;">
            <a href="{{ url }}" target="_blank" class="ui orange large fluid button"
                style="background-color: #ff7119!important;box-shadow: inset 0 0 0 0 rgba(34,36,38,.15);color:#fff;text-shadow:none;text-decoration: none;display:block;width:100%;font-size:1.2rem;padding:8px 16px;text-align:center;border-radius:0.3rem;box-sizing:border-box;">Verify
                Account</a>
        </div>
        <div style="font-size: 14px; color: #808080;">
            (If you didn't try to sign up, you can safely ignore this email.)
        </div>
    </div>
	`
	AccountActivationTextBody string = `
	Please verify your email address

	You have created an account with this email address.
	Follow this link to verify your email address.

	{{ url }}

	(If you didn't try to sign up, you can safely ignore this email.)
	`
	AccountActivationWithOTPHTMLBody string = `
	<div style="max-width: 600px; margin: 0 auto; font-family: Helvetica Neue,Arial,Helvetica,sans-serif; color: #414141; font-size: 16px;padding: 9px;">
        <div style="font-size: 28px; margin-bottom: 18px; color: #ff7119; word-break: break-word; line-height: 115%;">
            Please verify your email address
        </div>
        <div style="word-break: break-word;padding-bottom:9px;">
            You have created an account with this email address.
        </div>
        <div style="word-break: break-word;padding-bottom:9px;">
            Copy and paste this one-time pin code to your application:
        </div>
        <div style="background-color: #F0F0F0; border-radius: 9px; margin-top: 27px; margin-bottom: 36px; padding: 18px; word-break: break-word; line-height: 150%; letter-spacing: 9px;">
			{{ code }}
        </div>
        <div style="font-size: 14px; color: #808080;">
            (If you didn't try to sign up, you can safely ignore this email.)
        </div>
    </div>
	`
	AccountActivationWithOTPTextBody string = `
	Please verify your email address

	You have created an account with this email address.
	Copy and paste this one-time pin code to your application:

	{{ code }}

	(If you didn't try to sign up, you can safely ignore this email.)
	`
)

type AccountActivationMail struct {
	Redirect string
	Code     string
	UserID   string
	Method   string
}

func (a *AccountActivationMail) BuildSubject() string {
	return AccountActivationSubject
}

func (a *AccountActivationMail) BuildHTMLBody() string {
	var body string

	if a.Method == constant.VerificationMethodLink {
		domain := config.All().Others.VerifyAccountDomain
		url := fmt.Sprintf("%s/account-verification?redirect=%s&code=%s&uid=%s", domain, a.Redirect, a.Code, a.UserID)

		body = strings.Replace(AccountActivationHTMLBody, "{{ url }}", url, -1)
	} else {
		codeArr := strings.Split(a.Code, "")
		code := strings.Join(codeArr, " - ")
		body = strings.Replace(AccountActivationWithOTPHTMLBody, "{{ code }}", code, -1)
	}

	return body
}

func (a *AccountActivationMail) BuildTextBody() string {
	var body string

	if a.Method == constant.VerificationMethodLink {
		domain := config.All().Others.VerifyAccountDomain
		url := fmt.Sprintf("%s/account-verification?redirect=%s&code=%s&uid=%s", domain, a.Redirect, a.Code, a.UserID)

		body = strings.Replace(AccountActivationTextBody, "{{ url }}", url, -1)
	} else {
		codeArr := strings.Split(a.Code, "")
		code := strings.Join(codeArr, " - ")
		body = strings.Replace(AccountActivationWithOTPTextBody, "{{ code }}", code, -1)
	}

	return body
}

func NewAccountActivationMail(redirect string, code string, userID string) *AccountActivationMail {
	return &AccountActivationMail{
		Redirect: redirect,
		Code:     code,
		UserID:   userID,
		Method:   constant.VerificationMethodLink,
	}
}

func NewAccountActivationMailByOTP(code string, userID string) *AccountActivationMail {
	return &AccountActivationMail{
		Code:   code,
		UserID: userID,
		Method: constant.VerificationMethodOTP,
	}
}
