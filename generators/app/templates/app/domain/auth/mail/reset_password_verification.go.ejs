package mail

import (
	"fmt"
	"<%= appModName %>/app/domain/auth/constant"
	"<%= appModName %>/config"
	"strings"
)

const (
	ResetPasswordVerificationSubject  string = "Reset Password"
	ResetPasswordVerificationHTMLBody string = `
	<div style="max-width: 600px; margin: 0 auto; font-family: Helvetica Neue,Arial,Helvetica,sans-serif; color: #414141; font-size: 16px;padding: 9px;">
        <div style="font-size: 28px; margin-bottom: 18px; color: #ff7119; word-break: break-word; line-height: 115%;">
            Continue resetting your password
        </div>
        <div style="word-break: break-word;padding-bottom:9px">
            You have requested to reset your account password with this email address.
        </div>
        <div style="word-break: break-word;padding-bottom:9px">
            Click on this button to reset your password.
        </div>
        <div style="margin-top: 27px; margin-bottom: 36px; padding: 0; word-break: break-word;">
            <a href="{{ url }}" target="_blank" class="ui orange large fluid button" style="background-color: #ff7119!important;box-shadow: inset 0 0 0 0 rgba(34,36,38,.15);color:#fff;text-shadow:none;text-decoration: none;display:block;width:100%;font-size:1.2rem;padding:8px 16px;text-align:center;border-radius:0.3rem;box-sizing:border-box;">Reset
                Password</a>
        </div>
        <div style="font-size: 14px; color: #808080;">
            (If you didn’t try to reset password, you can safely ignore this email.)
        </div>
    </div>
	`
	ResetPasswordVerificationTextBody string = `
	Continue resetting your password

	You have requested to reset your account password with this email address.
	Follow this link to verify your email address.

	{{ url }}

	(If you didn't try to reset password, you can safely ignore this email.)
	`
	ResetPasswordVerificationWithOTPHTMLBody string = `
	<div
        style="max-width: 600px; margin: 0 auto; font-family: Helvetica Neue,Arial,Helvetica,sans-serif; color: #414141; font-size: 16px;padding: 9px;">
        <div style="font-size: 28px; margin-bottom: 18px; color: #ff7119; word-break: break-word; line-height: 115%;">
            Continue resetting your password
        </div>
        <div style="word-break: break-word;padding-bottom:9px">
            You have requested to reset your account password with this email address.
        </div>
        <div style="word-break: break-word;padding-bottom:9px">
            Copy and paste this one-time pin code to your application:
        </div>
        <div
            style="background-color: #F0F0F0; border-radius: 9px; margin-top: 27px; margin-bottom: 36px; padding: 18px; word-break: break-word; line-height: 150%; letter-spacing: 9px;">
			{{ code }}
        </div>
        <div style="font-size: 14px; color: #808080;">
            (If you didn’t try to reset password, you can safely ignore this email.)
        </div>
    </div>
	`
	ResetPasswordVerificationWithOTPTextBody string = `
	Continue resetting your password

	You have requested to reset your account password with this email address.
	Copy and paste this one-time pin code to your application:

	{{ code }}

	(If you didn't try to reset password, you can safely ignore this email.)
	`
)

type ResetPasswordVerificationMail struct {
	Code     string
	UserID   string
	Method   string
	Platform string
	Redirect string
}

func (r *ResetPasswordVerificationMail) BuildSubject() string {
	return ResetPasswordVerificationSubject
}

func (r *ResetPasswordVerificationMail) BuildHTMLBody() string {
	var body string
	if r.Method == constant.VerificationMethodLink {
		domain := config.All().Others.VerifyAccountDomain
		url := fmt.Sprintf("%s/reset-password?redirect=%s&code=%s&uid=%s", domain, r.Redirect, r.Code, r.UserID)

		body = strings.Replace(ResetPasswordVerificationHTMLBody, "{{ url }}", url, -1)
	} else {
		codeArr := strings.Split(r.Code, "")
		code := strings.Join(codeArr, " - ")
		body = strings.Replace(ResetPasswordVerificationWithOTPHTMLBody, "{{ code }}", code, -1)
	}

	return body
}

func (r *ResetPasswordVerificationMail) BuildTextBody() string {
	var body string
	if r.Method == constant.VerificationMethodLink {
		domain := config.All().Others.VerifyAccountDomain
		url := fmt.Sprintf("%s/reset-password?redirect=%s&code=%s&uid=%s", domain, r.Redirect, r.Code, r.UserID)

		body = strings.Replace(ResetPasswordVerificationTextBody, "{{ url }}", url, -1)
	} else {
		codeArr := strings.Split(r.Code, "")
		code := strings.Join(codeArr, " - ")
		body = strings.Replace(ResetPasswordVerificationWithOTPTextBody, "{{ code }}", code, -1)
	}

	return body
}

func NewResetPasswordVerificationMail(redirect string, code string, userID string) *ResetPasswordVerificationMail {
	return &ResetPasswordVerificationMail{
		Redirect: redirect,
		Code:     code,
		UserID:   userID,
		Method:   constant.VerificationMethodLink,
	}
}

func NewResetPasswordVerificationMailByOTP(code string, userID string) *ResetPasswordVerificationMail {
	return &ResetPasswordVerificationMail{
		Code:   code,
		UserID: userID,
		Method: constant.VerificationMethodOTP,
	}
}
