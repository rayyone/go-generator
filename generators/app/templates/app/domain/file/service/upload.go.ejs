package filesvc

import (
	filehelper "github.com/rayyone/go-core/helpers/file"
	"github.com/rayyone/go-core/storage"
	"mime/multipart"
	containerrepo "<%= appModName %>/app/foundation/repo/container"
	basesvc "<%= appModName %>/app/foundation/service/base"
	"<%= appModName %>/config"
)

type FileUploadSvc struct {
	*basesvc.BaseService
	storage *storage.Storage
}

func NewFileUploadSvc(repo *containerrepo.Repo, s *storage.Storage) *FileUploadSvc {
	return &FileUploadSvc{
		BaseService: &basesvc.BaseService{
			Repo: repo,
		},
		storage: s,
	}
}

func (s *FileUploadSvc) StoreProfilePicture(profilePicture *multipart.FileHeader) (*string, error) {
	storageFolders := config.All().Storage.Folders
	doc, err := profilePicture.Open()
	if err != nil {
		return nil, err
	}

	filename := filehelper.RandomFilename(profilePicture)
	profilePictureURL, err := s.storage.Store(doc, filename, storageFolders["profile_picture"])
	if err != nil {
		return nil, err
	}

	return profilePictureURL, nil
}
