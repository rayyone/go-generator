package userg

import (
	corecontainer "github.com/rayyone/go-core/container"
	corerp "github.com/rayyone/go-core/repositories"
	"gorm.io/gorm"
	"<%= appModName %>/app/domain/user/repo"
	baserp "<%= appModName %>/app/foundation/repo/base"
)

type UserSocialGorm struct {
	*baserp.BaseGormRepository
}

func (g *UserSocialGorm) SkipBaseQuery() userrp.UserSocial {
	newGormRepo := NewUserSocialGorm()
	newGormRepo.BaseQuery = func(r corecontainer.RequestInf) *gorm.DB {
		return corerp.DefaultBaseQuery(r)
	}
	return newGormRepo
}

func NewUserSocialGorm() *UserSocialGorm {
	br := baserp.NewBaseGormRepository()
	br.BaseQuery = func(r corecontainer.RequestInf) *gorm.DB {
		return r.GetDBM().GetTx()
	}
	gormRepo := &UserSocialGorm{
		BaseGormRepository: br,
	}

	return gormRepo
}
